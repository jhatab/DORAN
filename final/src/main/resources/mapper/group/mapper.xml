<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.doran.group.dao.GroupDAO">

	<!-- 메인 그룹 목록 최신순 -->
	<select id="mainGroupList" resultType="com.project.doran.group.vo.GroupVO">
		SELECT *
		FROM groupTbl
		WHERE isDeleted = 0
		ORDER BY createdDate DESC
		LIMIT 5
	</select>

	<!-- 그룹 목록 최신순 -->
	<select id="groupList" resultType="com.project.doran.group.vo.GroupVO">
		SELECT *
		FROM groupTbl
		WHERE isDeleted = 0
		ORDER BY createdDate DESC
	</select>
	
	<!-- 그룹 목록 추천순 (인원순) -->
	<select id="groupLikeList" resultType="com.project.doran.group.vo.GroupVO">
		SELECT g.*, personCnt
		FROM groupTbl g
			LEFT OUTER JOIN (
				SELECT ug.groupId, count(*) personCnt
				FROM userGroupMappingTbl ug
				WHERE ug.isApproval != 0
				GROUP BY groupId
		    ) A ON g.groupId = A.groupId
		WHERE g.isDeleted = 0
		ORDER BY personCnt desc, g.createdDate desc
		LIMIT 5
	</select>
	
	<!-- 생성자-그룹 매핑 -->
	<insert id="userGroupMapping">
		INSERT INTO userGroupMappingTbl(groupId, uid, isApproval)
		VALUES (#{groupId}, #{uid}, 2)
	</insert>

	<!-- 그룹 페이지 -->
	<select id="groupHome" resultType="com.project.doran.group.vo.GroupVO">
		SELECT * 
		FROM groupTbl
		WHERE groupId = #{groupId}
	</select>

	<!-- 그룹 생성 -->
	<insert id="groupCreate" useGeneratedKeys="true" keyProperty="groupId">
		INSERT INTO groupTbl(categoryId, groupName, groupIntro, groupImagePath, uid)
		VALUES (#{categoryId}, #{groupName}, #{groupIntro}, #{groupImagePath}, #{uid})
	</insert>

	<!-- 그룹 수정 -->
	<update id="groupUpdate">
		UPDATE groupTbl
		SET categoryId = #{categoryId}, groupName = #{groupName}, groupIntro = #{groupIntro},
			groupImagePath = #{groupImagePath}, isRevised = 1, revisedDate = now()
		WHERE groupId = #{groupId}
	</update>

	<!-- 그룹 삭제 -->
	<update id="groupRemove">
		UPDATE groupTbl
		SET isDeleted = 1, deletedDate = now()
		WHERE groupId = #{groupId}
	</update>

	<!-- 그룹 가입 신청 -->
	<insert id="groupJoin">
		INSERT INTO userGroupMappingTbl(groupId, uid)
		VALUES (#{groupId}, #{uid})
	</insert>

	<!-- 그룹 가입 신청 여부 체크 -->
	<select id="groupJoinCheck" resultType="int">
		SELECT count(*)
		FROM userGroupMappingTbl
		WHERE groupId = #{groupId}
			AND uid = #{uid}
	</select>

	<!-- 그룹 가입 승인 체크 -->
	<select id="isApproval" resultType="int">
		SELECT count(*)
		FROM userGroupMappingTbl
		WHERE groupId = #{groupId}
			AND uid = #{uid}
			AND isApproval > 0
	</select>

	<!-- 그룹 가입 회원 리스트 -->
	<select id="groupMemberList" resultType="com.project.doran.group.vo.GroupVO">
		SELECT ug.*, u.nickname, u.profileImg, postCnt, replyCnt
		FROM userGroupMappingTbl ug
		    LEFT OUTER JOIN userTbl u on u.uid = ug.uid
		    LEFT OUTER JOIN (
				SELECT uid, count(*) AS postCnt
				FROM postTbl p
				WHERE p.groupId = #{groupId} AND p.isDeleted = 0
				GROUP BY uid
		    ) A on ug.uid = A.uid
		    LEFT OUTER JOIN (
				SELECT r.uid, count(*) replyCnt 
				FROM replyTbl r
					LEFT OUTER JOIN postTbl p on p.postId = r.postId
				WHERE p.groupId = #{groupId} AND p.isDeleted = 0 AND r.isDeleted = 0
				GROUP BY uid
		    ) B on ug.uid = B.uid
		WHERE ug.groupId = #{groupId}
		ORDER BY isApproval DESC, joinDate ASC
	</select>

	<!-- 그룹 가입 승인 -->
	<update id="groupMemberApproval">
		UPDATE userGroupMappingTbl
		SET isApproval = 1
		WHERE groupId = #{groupId}
			AND uid = #{uid}
	</update>

	<!-- 그룹 가입 취소, 퇴출, 탈퇴 -->
	<delete id="groupMemberCancle">
		DELETE FROM userGroupMappingTbl
		WHERE groupId = #{groupId}
			AND uid = #{uid}
	</delete>
	
	<!-- 그룹원 수 (관리자) -->
	<select id="groupMemberCnt" resultType="int">
		SELECT count(*) 
		FROM userGroupMappingTbl
		WHERE groupId = #{groupId}
	</select>
	
	<!-- 그룹원 수 (그룹원) -->
	<select id="groupMemberCntB" resultType="int">
		SELECT count(*) 
		FROM userGroupMappingTbl
		WHERE groupId = #{groupId}
			AND isApproval != 0
	</select>

</mapper>