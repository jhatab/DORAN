<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.doran.post.dao.PostDAO">
	
	<!-- 게시물 목록 -->
	<select id="postList" resultType="com.project.doran.post.vo.PostVO">
		select distinct p.*, u.nickname
		from postTbl p
			left outer join userTbl u on p.uid = u.uid
			left outer join posttagmappingtbl pt on pt.postId = p.postId
   			left outer join tagTbl t on t.tagId = pt.tagId
		where groupId = #{groupId} and p.isDeleted = 0
		<if test="keyword != null and keyword != ''">
			and (content like concat('%',#{keyword},'%') OR u.nickname like concat('%',#{keyword},'%') OR t.tagName like concat('%',#{keyword},'%'))
		</if>
		order by postedDate desc;
	</select>
	
	<!-- 이미지 파일 목록 -->
	<select id="postImageList" resultType="com.project.doran.attch.vo.AttchVO">
		select a.*
		from attchTbl a
			left outer join postTbl p on a.postId = p.postId
		    left outer join groupTbl g on p.groupId = g.groupId
		    where p.groupId = #{groupId} and p.isDeleted = 0
	</select>
	
	<!-- 태그 목록 -->
	<select id="tagList" resultType="com.project.doran.tag.vo.TagVO">
		select p.groupId, p.postId, t.tagId, t.tagName
		from tagTbl t
			left outer join postTagMappingTbl pt on t.tagId = pt.tagId
		    left outer join postTbl p on pt.postId = p.postId
		where p.groupId = #{groupId} and p.isDeleted = 0;
	</select>
	
	<!-- 게시물 작성 -->
	<insert id="postWrite" useGeneratedKeys="true" keyProperty="postId">
		insert into postTbl(groupId, uid, content, openness) values (#{groupId}, #{uid}, #{content}, #{openness})
	</insert>
	
	<!-- 이미지 파일 등록 -->
	<insert id="postImageUpload">
		insert into attchTbl(attchId, postId, srvFileName, localFileName, filePath)
		values (#{attchId}, #{postId}, #{srvFileName}, #{localFileName}, #{filePath})
	</insert>
		
	<!-- 태그 등록 -->
	<insert id="tagUpload" useGeneratedKeys="true" keyProperty="tagId">
		insert into tagTbl(tagName) values (#{tagName})
	</insert>
<!-- 	<insert id="tagUpload" useGeneratedKeys="true" keyProperty="tagId"> -->
<!-- 		insert into tagTbl(tagName)  -->
<!-- 		values  -->
<!-- 		<foreach collection="list" item="item" separator=","> -->
<!-- 			(#{item.tagName}) -->
<!-- 		</foreach> -->
<!-- 	</insert> -->
	
	<!-- 게시물-태그 매핑 -->
	<insert id="postTagMapping">
		insert into postTagMappingTbl(postId, tagId) values (#{postId}, #{tagId})
	</insert>
	
	<!-- 게시물 수정 -->
	<update id="postUpdate">
		update postTbl 
		set content = #{content}, openness = #{openness}, isRevised = 1, revisedDate = now()
		where postId = #{postId}
	</update>
	
	<!-- 이미지 파일 수정 : 기존 이미지 파일 삭제 후 이미지 파일 등록 -->
	<delete id="postImageDelete">
		delete attchTbl where postId = #{postId}
	</delete>
	
	<!-- 게시물 삭제 -->
	<update id="postDelete">
		update postTbl 
		set isDeleted = 1, deletedDate = now()
		where postId = #{postId}
	</update>
	
	<!-- 인기 게시물 목록 -->
	<select id="hotPostList" resultType="com.project.doran.post.vo.PostVO">
		<![CDATA[
		select * from postTbl
		WHERE groupId = #{groupId} AND isDeleted = 0 AND postedDate BETWEEN DATE_ADD(NOW(),INTERVAL -1 WEEK ) AND NOW()
		order by replyCount desc, postedDate desc
		limit 5
		]]>
	</select>

</mapper>